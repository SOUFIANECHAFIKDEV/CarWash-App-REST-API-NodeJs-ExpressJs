{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:17:00.169Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:17:01.363Z"}
{"message":"Cannot merge type object with another type: string","stack":"AssertionError [ERR_ASSERTION]: Cannot merge type object with another type: string\n    at internals.Object.concat (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\joi\\lib\\types\\any\\index.js:135:14)\n    at internals.Object.concat (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\joi\\lib\\types\\any\\index.js:187:76)\n    at internals.Object.when (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\joi\\lib\\types\\any\\index.js:394:60)\n    at validateBilling (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:132:12)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:25:23)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)","generatedMessage":false,"name":"AssertionError [ERR_ASSERTION]","code":"ERR_ASSERTION","actual":false,"expected":true,"operator":"==","level":"error","timestamp":"2018-09-27T13:17:06.138Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:18:46.206Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:18:47.323Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:18:54.490Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:18:55.605Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:34:34.766Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:34:35.891Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:35:51.438Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:35:52.543Z"}
{"message":"Cannot destructure property `error` of 'undefined' or 'null'.","stack":"TypeError: Cannot destructure property `error` of 'undefined' or 'null'.\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:25:23)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at logger (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\morgan\\index.js:144:5)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)","level":"error","timestamp":"2018-09-27T13:35:54.858Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:36:32.572Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:36:33.667Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:37:12.291Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:37:13.495Z"}
{"message":"Cannot destructure property `error` of 'undefined' or 'null'.","stack":"TypeError: Cannot destructure property `error` of 'undefined' or 'null'.\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:25:23)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at logger (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\morgan\\index.js:144:5)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)","level":"error","timestamp":"2018-09-27T13:37:49.405Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:44:22.703Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:44:23.782Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:45:49.380Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:45:50.463Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:46:09.692Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:46:10.952Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:48:03.439Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:48:04.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:48:33.586Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:48:34.652Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:50:30.309Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:50:31.427Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:50:51.533Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:50:52.629Z"}
{"message":"Cannot destructure property `error` of 'undefined' or 'null'.","stack":"TypeError: Cannot destructure property `error` of 'undefined' or 'null'.\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:25:23)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at logger (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\morgan\\index.js:144:5)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)","level":"error","timestamp":"2018-09-27T13:50:55.492Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:51:20.782Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:51:21.914Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:53:11.225Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:53:12.296Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:57:08.798Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:57:09.934Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T13:58:31.173Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T13:58:32.361Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T14:01:11.555Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T14:01:14.401Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T14:01:15.485Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T14:01:24.268Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T14:01:25.385Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T14:02:18.080Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T14:02:19.173Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T14:04:51.162Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T14:04:52.282Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T14:13:59.582Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T14:14:00.655Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T21:59:03.295Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T21:59:04.418Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:02:17.467Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:02:18.587Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:03:02.641Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:03:03.776Z"}
{"message":"Cannot read property 'reference' of undefined","stack":"TypeError: Cannot read property 'reference' of undefined\n    at asyncForEach (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:43:97)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\helpers\\asyncForEach\\asyncForEach.js:3:15)\n    at selectSectionList (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:41:15)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:58:11)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at logger (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\morgan\\index.js:144:5)","level":"error","timestamp":"2018-09-27T22:03:44.186Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:04:37.957Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:04:39.080Z"}
{"message":"Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","errors":{"customer":{"message":"Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"Array","value":{},"path":"customer","reason":{"message":"Cast to [ObjectId] failed for value \"[{}]\" at path \"customer\"","name":"CastError","stringValue":"\"[{}]\"","kind":"[ObjectId]","value":"[{}]","path":"customer","reason":{"message":"Cast to ObjectId failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"ObjectId","value":{},"path":"customer"}}}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:930:10)\n    at model._handleIndex (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:740:14)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:697:22)\n    at model.Document (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:114:12)\n    at model.Model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:73:12)\n    at new model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:4324:13)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:62:21)\n    at <anonymous>","name":"ValidationError","level":"error","timestamp":"2018-09-27T22:06:34.957Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:08:24.810Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:08:26.038Z"}
{"message":"Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","errors":{"customer":{"message":"Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"Array","value":{},"path":"customer","reason":{"message":"Cast to [ObjectId] failed for value \"[{}]\" at path \"customer\"","name":"CastError","stringValue":"\"[{}]\"","kind":"[ObjectId]","value":"[{}]","path":"customer","reason":{"message":"Cast to ObjectId failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"ObjectId","value":{},"path":"customer"}}}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:930:10)\n    at model._handleIndex (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:740:14)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:697:22)\n    at model.Document (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:114:12)\n    at model.Model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:73:12)\n    at new model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:4324:13)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:62:21)\n    at <anonymous>","name":"ValidationError","level":"error","timestamp":"2018-09-27T22:08:33.543Z"}
{"message":"Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","errors":{"customer":{"message":"Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"Array","value":{},"path":"customer","reason":{"message":"Cast to [ObjectId] failed for value \"[{}]\" at path \"customer\"","name":"CastError","stringValue":"\"[{}]\"","kind":"[ObjectId]","value":"[{}]","path":"customer","reason":{"message":"Cast to ObjectId failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"ObjectId","value":{},"path":"customer"}}}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:930:10)\n    at model._handleIndex (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:740:14)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:697:22)\n    at model.Document (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:114:12)\n    at model.Model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:73:12)\n    at new model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:4324:13)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:62:21)\n    at <anonymous>","name":"ValidationError","level":"error","timestamp":"2018-09-27T22:09:05.475Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:09:51.467Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:09:52.612Z"}
{"message":"Cannot read property 'section' of undefined","stack":"TypeError: Cannot read property 'section' of undefined\n    at asyncForEach (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:43:79)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\helpers\\asyncForEach\\asyncForEach.js:3:15)\n    at selectSectionList (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:41:15)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:58:11)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\middleware\\roles\\employee.js:11:3)\n    at <anonymous>","level":"error","timestamp":"2018-09-27T22:09:54.852Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:11:52.452Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:11:53.599Z"}
{"message":"Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","errors":{"customer":{"message":"Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"Array","value":{},"path":"customer","reason":{"message":"Cast to [ObjectId] failed for value \"[{}]\" at path \"customer\"","name":"CastError","stringValue":"\"[{}]\"","kind":"[ObjectId]","value":"[{}]","path":"customer","reason":{"message":"Cast to ObjectId failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"","name":"CastError","stringValue":"\"{ name: undefined, phoneNumber: undefined }\"","kind":"ObjectId","value":{},"path":"customer"}}}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Cast to Array failed for value \"{ name: undefined, phoneNumber: undefined }\" at path \"customer\"\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:930:10)\n    at model._handleIndex (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:740:14)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:697:22)\n    at model.Document (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:114:12)\n    at model.Model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:73:12)\n    at new model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:4324:13)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:62:21)\n    at <anonymous>","name":"ValidationError","level":"error","timestamp":"2018-09-27T22:11:54.744Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:13:11.668Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:13:12.807Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:13:47.449Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:13:48.532Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:14:40.145Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:14:41.271Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:15:03.686Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:15:04.821Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:15:54.052Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:15:55.172Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:16:57.743Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:16:58.885Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:18:25.570Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:18:28.727Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:18:29.865Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:18:57.959Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:18:59.105Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:20:33.250Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:20:34.371Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:21:22.302Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:21:23.448Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:22:00.289Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:22:01.425Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:22:16.948Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:22:18.042Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:26:23.628Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:26:24.779Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:28:47.769Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:28:48.892Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:29:14.720Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:29:15.837Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:29:20.826Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:29:21.949Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:29:44.919Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:29:46.042Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:30:41.902Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:30:42.975Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:31:16.401Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:31:17.495Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:31:45.452Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:31:46.600Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:32:27.404Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:32:28.524Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:32:44.717Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:32:45.857Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:33:14.127Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:33:15.267Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:33:34.696Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:33:35.788Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:33:38.270Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:33:39.380Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:35:32.874Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:35:33.942Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:36:18.922Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:36:20.035Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:37:24.241Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:37:25.401Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:37:45.962Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:37:47.080Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:39:22.372Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:39:23.537Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:39:56.758Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:39:57.881Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:41:01.589Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:41:02.713Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:41:41.723Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:41:42.862Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:42:10.426Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:42:11.522Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:42:29.692Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:42:30.771Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:42:56.806Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:42:57.951Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:43:42.286Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:43:43.403Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:43:53.199Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:43:54.288Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:44:13.167Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:44:14.307Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:44:42.158Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:44:43.288Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:45:07.376Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:45:08.520Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:46:31.871Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:46:32.986Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:46:57.903Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:46:59.057Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:47:38.988Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:47:40.109Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:47:51.196Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:47:52.332Z"}
{"message":"Billing validation failed: customer.name: Path `name` (`a`) is shorter than the minimum allowed length (5)., customer.phoneNumber: Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10)., customer: Validation failed: name: Path `name` (`a`) is shorter than the minimum allowed length (5)., phoneNumber: Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).","errors":{"customer.name":{"message":"Path `name` (`a`) is shorter than the minimum allowed length (5).","name":"ValidatorError","properties":{"message":"Path `name` (`a`) is shorter than the minimum allowed length (5).","type":"minlength","minlength":5,"path":"name","value":"a"},"kind":"minlength","path":"name","value":"a","$isValidatorError":true},"customer.phoneNumber":{"message":"Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).","name":"ValidatorError","properties":{"message":"Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).","type":"minlength","minlength":10,"path":"phoneNumber","value":"a"},"kind":"minlength","path":"phoneNumber","value":"a","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` (`a`) is shorter than the minimum allowed length (5).","name":"ValidatorError","properties":{"message":"Path `name` (`a`) is shorter than the minimum allowed length (5).","type":"minlength","minlength":5,"path":"name","value":"a"},"kind":"minlength","path":"name","value":"a","$isValidatorError":true},"phoneNumber":{"message":"Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).","name":"ValidatorError","properties":{"message":"Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).","type":"minlength","minlength":10,"path":"phoneNumber","value":"a"},"kind":"minlength","path":"phoneNumber","value":"a","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` (`a`) is shorter than the minimum allowed length (5)., phoneNumber: Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer.name: Path `name` (`a`) is shorter than the minimum allowed length (5)., customer.phoneNumber: Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10)., customer: Validation failed: name: Path `name` (`a`) is shorter than the minimum allowed length (5)., phoneNumber: Path `phoneNumber` (`a`) is shorter than the minimum allowed length (10).\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at SingleNested.Subdocument.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\types\\subdocument.js:113:18)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-27T22:47:53.472Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:49:40.584Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:49:41.724Z"}
{"message":"Billing validation failed: customer.phoneNumber: Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10)., customer: Validation failed: phoneNumber: Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).","errors":{"customer.phoneNumber":{"message":"Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).","name":"ValidatorError","properties":{"message":"Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).","type":"minlength","minlength":10,"path":"phoneNumber","value":"aaaaaa"},"kind":"minlength","path":"phoneNumber","value":"aaaaaa","$isValidatorError":true},"customer":{"errors":{"phoneNumber":{"message":"Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).","name":"ValidatorError","properties":{"message":"Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).","type":"minlength","minlength":10,"path":"phoneNumber","value":"aaaaaa"},"kind":"minlength","path":"phoneNumber","value":"aaaaaa","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: phoneNumber: Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer.phoneNumber: Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10)., customer: Validation failed: phoneNumber: Path `phoneNumber` (`aaaaaa`) is shorter than the minimum allowed length (10).\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at SingleNested.Subdocument.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\types\\subdocument.js:113:18)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-27T22:50:04.247Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:50:46.177Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:50:47.308Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-27T22:58:30.341Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-27T22:58:31.483Z"}
{"level":"info","message":"Listening on port 1277...","timestamp":"2018-09-28T09:49:42.584Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-28T09:49:43.738Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T10:57:23.210Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T10:57:24.331Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:12:59.895Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:13:01.022Z"}
{"message":"Billing validation failed: customer: Path `customer` is required., vehicle: Path `vehicle` is required.","errors":{"customer":{"message":"Path `customer` is required.","name":"ValidatorError","properties":{"message":"Path `customer` is required.","type":"required","path":"customer"},"kind":"required","path":"customer","$isValidatorError":true},"vehicle":{"message":"Path `vehicle` is required.","name":"ValidatorError","properties":{"message":"Path `vehicle` is required.","type":"required","path":"vehicle"},"kind":"required","path":"vehicle","$isValidatorError":true}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Path `customer` is required., vehicle: Path `vehicle` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:13:34.151Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:16:56.108Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:16:57.229Z"}
{"message":"Billing validation failed: customer: Path `customer` is required., vehicle: Path `vehicle` is required.","errors":{"customer":{"message":"Path `customer` is required.","name":"ValidatorError","properties":{"message":"Path `customer` is required.","type":"required","path":"customer"},"kind":"required","path":"customer","$isValidatorError":true},"vehicle":{"message":"Path `vehicle` is required.","name":"ValidatorError","properties":{"message":"Path `vehicle` is required.","type":"required","path":"vehicle"},"kind":"required","path":"vehicle","$isValidatorError":true}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Path `customer` is required., vehicle: Path `vehicle` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:16:58.413Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:17:14.412Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:17:15.538Z"}
{"message":"Billing validation failed: customer: Path `customer` is required., vehicle: Path `vehicle` is required.","errors":{"customer":{"message":"Path `customer` is required.","name":"ValidatorError","properties":{"message":"Path `customer` is required.","type":"required","path":"customer"},"kind":"required","path":"customer","$isValidatorError":true},"vehicle":{"message":"Path `vehicle` is required.","name":"ValidatorError","properties":{"message":"Path `vehicle` is required.","type":"required","path":"vehicle"},"kind":"required","path":"vehicle","$isValidatorError":true}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Path `customer` is required., vehicle: Path `vehicle` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:17:19.519Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:17:40.214Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:17:41.346Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:20:58.419Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:20:59.547Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:23:07.933Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:23:09.107Z"}
{"message":"Billing validation failed: customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at SingleNested.Subdocument.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\types\\subdocument.js:113:18)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:23:19.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:25:28.979Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:25:30.111Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:26:04.186Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:26:05.364Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:26:56.395Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:26:57.520Z"}
{"message":"Billing validation failed: customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at SingleNested.Subdocument.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\types\\subdocument.js:113:18)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:26:58.822Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:27:19.951Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:27:21.077Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:28:10.447Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:28:11.618Z"}
{"message":"Billing validation failed: customer: Cast to Embedded failed for value \"\" at path \"customer\", vehicle: Cast to Embedded failed for value \"\" at path \"vehicle\"","errors":{"customer":{"message":"Cast to Embedded failed for value \"\" at path \"customer\"","name":"CastError","stringValue":"\"\"","kind":"Embedded","value":"","path":"customer","reason":{"message":"Tried to set nested object field `customer` to primitive value `` and strict mode is set to throw.","name":"ObjectExpectedError","path":"customer"}},"vehicle":{"message":"Cast to Embedded failed for value \"\" at path \"vehicle\"","name":"CastError","stringValue":"\"\"","kind":"Embedded","value":"","path":"vehicle","reason":{"message":"Tried to set nested object field `vehicle` to primitive value `` and strict mode is set to throw.","name":"ObjectExpectedError","path":"vehicle"}}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer: Cast to Embedded failed for value \"\" at path \"customer\", vehicle: Cast to Embedded failed for value \"\" at path \"vehicle\"\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:930:10)\n    at model._handleIndex (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:740:14)\n    at model.$set (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:697:22)\n    at model.Document (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:114:12)\n    at model.Model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:73:12)\n    at new model (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:4324:13)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:61:21)\n    at <anonymous>","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:28:16.265Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:28:41.505Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:28:42.639Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:30:21.006Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:30:22.125Z"}
{"message":"Billing validation failed: customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at SingleNested.Subdocument.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\types\\subdocument.js:113:18)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T11:30:26.998Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:30:53.117Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:30:54.236Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:31:27.601Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:31:28.725Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:36:19.005Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:36:20.188Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:36:23.548Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:36:24.691Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:41:40.620Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:41:41.739Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:43:36.966Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:43:38.091Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:46:52.170Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:46:53.289Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:47:19.285Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:47:20.429Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:48:20.472Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:48:21.603Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:49:48.612Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:49:49.744Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:52:14.404Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:52:15.539Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.contentType (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:595:15)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:145:14)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:33:47)\n    at <anonymous>","level":"error","timestamp":"2018-09-29T11:52:16.647Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:53:02.851Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:53:03.999Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.json (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:264:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:158:21)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:34:13)\n    at <anonymous>","level":"error","timestamp":"2018-09-29T11:53:07.998Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:53:25.857Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:53:26.984Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:170:12)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:35:46)\n    at <anonymous>","level":"error","timestamp":"2018-09-29T11:53:28.091Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:170:12)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:35:46)\n    at <anonymous>","level":"error","timestamp":"2018-09-29T11:53:48.995Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:54:16.801Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:54:17.955Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:170:12)\n    at ServerResponse.json (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:267:15)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:158:21)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:73:21)\n    at <anonymous>","level":"error","timestamp":"2018-09-29T11:54:47.111Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T11:54:56.669Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T11:54:57.781Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T12:57:37.827Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T12:57:38.935Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T12:58:54.660Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T12:58:55.756Z"}
{"message":"Parameter \"filter\" to findOne() must be an object, got 5baa14d2b1fa283538a324f2","stack":"ObjectParameterError: Parameter \"filter\" to findOne() must be an object, got 5baa14d2b1fa283538a324f2\n    at new ObjectParameterError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\objectParameter.js:25:11)\n    at model.Query.Query.findOne (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\query.js:1965:16)\n    at Function.findOne (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:1736:13)\n    at router.delete (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:82:35)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\middleware\\roles\\admin.js:14:3)\n    at <anonymous>","name":"ObjectParameterError","level":"error","timestamp":"2018-09-29T12:59:45.622Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:00:13.374Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:00:14.497Z"}
{"message":"Parameter \"filter\" to findOne() must be an object, got 5baa14d2b1fa283538a324f2","stack":"ObjectParameterError: Parameter \"filter\" to findOne() must be an object, got 5baa14d2b1fa283538a324f2\n    at new ObjectParameterError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\objectParameter.js:25:11)\n    at model.Query.Query.findOne (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\query.js:1965:16)\n    at Function.findOne (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\model.js:1736:13)\n    at router.delete (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:82:35)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\middleware\\roles\\admin.js:14:3)\n    at <anonymous>","name":"ObjectParameterError","level":"error","timestamp":"2018-09-29T13:00:37.531Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:00:59.650Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:01:00.779Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:01:01.830Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:01:45.246Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:01:46.423Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:01:47.580Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:03:07.985Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:03:09.126Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:03:10.249Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:03:21.459Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:04:30.949Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:04:32.079Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:05:20.015Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:05:21.113Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:05:52.535Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:05:53.606Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:06:44.242Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:06:45.310Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:07:02.497Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:07:34.743Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:08:04.930Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:08:06.066Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:08:07.206Z"}
{"message":"Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.","errors":{"IdVehicle":{"message":"Path `IdVehicle` is required.","name":"ValidatorError","properties":{"message":"Path `IdVehicle` is required.","type":"required","path":"IdVehicle"},"kind":"required","path":"IdVehicle","$isValidatorError":true},"IdCustomer":{"message":"Path `IdCustomer` is required.","name":"ValidatorError","properties":{"message":"Path `IdCustomer` is required.","type":"required","path":"IdCustomer"},"kind":"required","path":"IdCustomer","$isValidatorError":true},"customer.name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true},"customer":{"errors":{"name":{"message":"Path `name` is required.","name":"ValidatorError","properties":{"message":"Path `name` is required.","type":"required","path":"name"},"kind":"required","path":"name","$isValidatorError":true}},"_message":"Validation failed","message":"Validation failed: name: Path `name` is required.","name":"ValidationError"}},"_message":"Billing validation failed","stack":"ValidationError: Billing validation failed: IdVehicle: Path `IdVehicle` is required., IdCustomer: Path `IdCustomer` is required., customer.name: Path `name` is required., customer: Validation failed: name: Path `name` is required.\n    at new ValidationError (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\error\\validation.js:30:11)\n    at model.Document.invalidate (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1957:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\document.js:1825:17)\n    at C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\mongoose\\lib\\schematype.js:839:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2018-09-29T13:09:05.878Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:170:12)\n    at ServerResponse.json (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:267:15)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:158:21)\n    at router.delete (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:89:9)\n    at <anonymous>","level":"error","timestamp":"2018-09-29T13:09:38.209Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-09-29T13:09:58.836Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-09-29T13:09:59.942Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T09:01:39.190Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T09:01:40.342Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T09:07:58.234Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T09:07:59.395Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T09:10:28.847Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T09:10:29.987Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T09:11:56.113Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T09:11:57.240Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T09:59:44.100Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T09:59:45.200Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:09:21.488Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:09:22.653Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:09:41.214Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:09:42.360Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:10:51.720Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:10:52.883Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:11:44.068Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:11:45.165Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:16:38.543Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:16:39.670Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:21:00.091Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:21:01.214Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:23:27.871Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:23:29.001Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:30:49.233Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:30:50.314Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:31:26.412Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:31:27.521Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:32:55.572Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:32:56.722Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:170:12)\n    at ServerResponse.json (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:267:15)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:158:21)\n    at router.get (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:163:9)\n    at <anonymous>","level":"error","timestamp":"2018-10-03T10:32:57.864Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:33:33.098Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:33:34.174Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:33:53.137Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:33:54.288Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:34:12.488Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:34:13.576Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:34:29.445Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:34:30.551Z"}
{"message":"customerIsRegistered is not defined","stack":"ReferenceError: customerIsRegistered is not defined\n    at asyncForEach (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\billings.js:158:48)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\helpers\\asyncForEach\\asyncForEach.js:3:15)\n    at <anonymous>","level":"error","timestamp":"2018-10-03T10:34:58.066Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:35:13.202Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:35:14.345Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:37:51.835Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:37:52.947Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:38:47.051Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:38:48.167Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:47:00.907Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:47:02.032Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:51:30.980Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:51:32.130Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:51:48.243Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:51:49.349Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:58:39.301Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:58:40.425Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T10:58:46.236Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T10:58:47.364Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:01:40.106Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:01:41.193Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:02:04.920Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:02:06.027Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:07:05.699Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:07:06.776Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:07:15.740Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:07:16.817Z"}
{"message":"Cannot read property 'label' of undefined","stack":"TypeError: Cannot read property 'label' of undefined\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\appSettings.js:15:27)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\middleware\\roles\\admin.js:14:3)\n    at <anonymous>","level":"error","timestamp":"2018-10-03T11:07:48.981Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:08:24.635Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:08:25.758Z"}
{"message":"res.send is not a function","stack":"TypeError: res.send is not a function\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\appSettings.js:13:9)\n    at newFn (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express-async-errors\\index.js:25:20)\n    at Layer.handle [as handle_request] (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\middleware\\roles\\admin.js:14:3)\n    at <anonymous>","level":"error","timestamp":"2018-10-03T11:08:38.995Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:08:52.644Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:08:53.730Z"}
{"message":"Can't set headers after they are sent.","stack":"Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:491:11)\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\n    at ServerResponse.header (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:170:12)\n    at ServerResponse.json (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:267:15)\n    at ServerResponse.send (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\node_modules\\express\\lib\\response.js:158:21)\n    at router.post (C:\\Users\\TOSHIBA i5\\Desktop\\car-wash.git\\routes\\appSettings.js:20:9)\n    at <anonymous>","level":"error","timestamp":"2018-10-03T11:09:03.435Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:09:10.439Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:09:11.566Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-10-03T11:16:51.914Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-10-03T11:16:53.045Z"}
